@at-root {
  @-ms-viewport { width: device-width; }
}

html {
  box-sizing: border-box;
  -ms-overflow-style: scrollbar;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

@mixin _assert-ascending($map, $map-name) {
  $prev-key: null;
  $prev-num: null;
  @each $key, $num in $map {
    @if $prev-num == null {
      // Do nothing
    } @else if not comparable($prev-num, $num) {
      @warn "Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    } @else if $prev-num >= $num {
      @warn "Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    }
    $prev-key: $key;
    $prev-num: $num;
  }
}

@mixin _assert-starts-at-zero($map) {
  $values: map-values($map);
  $first-value: nth($values, 1);
  @if $first-value != 0 {
    @warn "First breakpoint in `$grid-breakpoints` must start at 0, but starts at #{$first-value}.";
  }
}

$sizes: (
        25: 25%,
        50: 50%,
        75: 75%,
        100: 100%
) !default;


$grid-breakpoints: (
        xs: 0,
        sm: 576px,
        md: 768px,
        lg: 992px,
        xl: 1200px
) !default;
@include _assert-ascending($grid-breakpoints, "$grid-breakpoints");
@include _assert-starts-at-zero($grid-breakpoints);



$container-max-widths: (
        sm: 540px,
        md: 720px,
        lg: 960px,
        xl: 1140px
) !default;
@include _assert-ascending($container-max-widths, "$container-max-widths");



$grid-columns:               12 !default;
$grid-gutter-width-base:     30px !default;
$grid-gutter-widths: (
        xs: $grid-gutter-width-base,
        sm: $grid-gutter-width-base,
        md: $grid-gutter-width-base,
        lg: $grid-gutter-width-base,
        xl: $grid-gutter-width-base
) !default;

$spacer:   .4rem !default;


$font-size-h1: .4rem !default;
$font-size-h2: .32rem !default;
$font-size-h3: .28rem !default;
$font-size-h4: .24rem !default;
$font-size-h5: .18rem !default;
$font-size-h6: .16rem !default;


$headings-margin-bottom: ($spacer / 2) !default;
$headings-font-family:   inherit !default;
$headings-font-weight:   500 !default;
$headings-line-height:   1.1 !default;
$headings-color:         inherit !default;

$enable-rounded:            true !default;
$enable-grid-classes:       true !default;
$enable-shadows:            false !default;

$btn-box-shadow:          inset 0 1px 0 rgba(#fff,.15), 0 1px 1px rgba(#444,.075) !default;
$btn-focus-box-shadow:           0 0 0 2px rgba(blue, .25) !default;
$btn-active-box-shadow:          inset 0 3px 5px rgba(#444,.125) !default;

$prefix-for-webkit: true !default;
$prefix-for-mozilla: true !default;
$prefix-for-microsoft: true !default;
$prefix-for-opera: true !default;
$prefix-for-spec: true !default;

// prefixer
@mixin prefixer ($property, $value, $prefixes) {
  @each $prefix in $prefixes {
    @if $prefix == webkit and $prefix-for-webkit == true {
      -webkit-#{$property}: $value;
    }
    @else if $prefix == moz and $prefix-for-mozilla == true {
      -moz-#{$property}: $value;
    }
    @else if $prefix == ms and $prefix-for-microsoft == true {
      -ms-#{$property}: $value;
    }
    @else if $prefix == o and $prefix-for-opera == true {
      -o-#{$property}: $value;
    }
    @else if $prefix == spec and $prefix-for-spec == true {
      #{$property}: $value;
    }
    @else { @warn "Unrecognized prefix: #{$prefix}";
    }
  }
}

@mixin triangle($direction, $size, $borderColor ) {
  content:"";
  height: 0;
  width: 0;
  @if $direction == top {
    border-bottom:$size solid $borderColor;
    border-left:$size dashed transparent;
    border-right:$size dashed transparent;
  }
  @else if $direction == right {
    border-left:$size solid $borderColor;
    border-top:$size dashed transparent;
    border-bottom:$size dashed transparent;

  }
  @else if $direction == bottom {
    border-top:$size solid $borderColor;
    border-left:$size dashed transparent;
    border-right:$size dashed transparent;
  }
  @else if $direction == left {
    border-right:$size solid $borderColor;
    border-top:$size dashed transparent;
    border-bottom:$size dashed transparent;
  }
}

$lte7:true !default;
@mixin inline-block {
  display: inline-block;
  @if $lte7 {
    *display: inline;
    *zoom:1;
  }
}

@mixin box-shadow($shadow...) {
  @if $enable-shadows {
    box-shadow: $shadow;
  }
}

@mixin border-radius($radius: $border-radius) {
  @if $enable-rounded {
    border-radius: $radius;
  }
}



html {
  font-size: 625%;
}

body, button, select, textarea, input, label, option, fieldset, legend {
  font-family: Tahoma, Verdana;
  font-size: 0.12rem;
  color: #444;
  background-color: #ddd;
}

body, div, dl, dt, dd, ul, ol, li, h1, h2, h3, h4, h5, h6, pre, form, fieldset, legend, input, textarea, button, p, blockquote, th, td {
  margin: 0;
  padding: 0;
}


h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
  margin-bottom: $headings-margin-bottom;
  font-family: $headings-font-family;
  font-weight: $headings-font-weight;
  line-height: $headings-line-height;
  color: $headings-color;
}

h1, .h1 { font-size: $font-size-h1; }
h2, .h2 { font-size: $font-size-h2; }
h3, .h3 { font-size: $font-size-h3; }
h4, .h4 { font-size: $font-size-h4; }
h5, .h5 { font-size: $font-size-h5; }
h6, .h6 { font-size: $font-size-h6; }


textarea {
  resize: none;
}

.clear {
  height: 0.01rem;
  overflow: hidden;
  clear: both;
}

a, img {
  border: 0;
}

a {
  color: #666;
  text-decoration: none;
}

li {
  list-style-type: none;
}

.light{
  color: white;
}

.ds {
  display: block;
}


.inline-block{
  @include inline-block;
}



.clearfix {
  *zoom: 1;

  &:after {
    display: block;
    visibility: hidden;
    clear: both;
    height: 0;
    content: ".";
    font-size: 0;
  }
}

.orange {
  color: orange;
}

.light {
  color: #fff;
}

.light-bg {
  background-color: #fff;
}

.gray-bg {
  background-color: #fafafa;
}

.green-bg{
  background: limegreen;
}

.text-center {
  text-align: center;
}

.font12 {
  font-size: 0.12rem;
}

.font14 {
  font-size: 0.14rem;
}

.font16 {
  font-size: 0.16rem;
}

.padding{
  padding:0.1rem;
}

.padding_top {
  padding-top: 0.1rem;
}

.padding_top20 {
  padding-top: 0.2rem;
}

.hide {
  display: none;
}

.show {
  display: block;
}

.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.fixed {
  position: fixed;
}
